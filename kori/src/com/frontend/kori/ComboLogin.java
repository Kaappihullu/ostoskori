package com.frontend.kori;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.PopupView;

public class ComboLogin extends CustomComponent implements PopupView.Content {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private VerticalLayout loginLayout;
	@AutoGenerated
	private Button blogin;
	@AutoGenerated
	private TextField tnimik;
	@AutoGenerated
	private PasswordField tpassword;
	@AutoGenerated
	private Button blogout;
	
	private VerticalLayout virhelaatikko;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ComboLogin() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// blogout
		blogout = new Button();
		blogout.setCaption("Uloskirjaus");
		blogout.setImmediate(true);
		blogout.setWidth("-1px");
		blogout.setHeight("-1px");
		mainLayout.addComponent(blogout, "top:14.0px;left:8.0px;");
		
		// verticalLayout_1
		loginLayout = buildLoginLayout();
		mainLayout.addComponent(loginLayout, "top:40.0px;left:140.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildLoginLayout() {
		// common part: create layout
		loginLayout = new VerticalLayout();
		loginLayout.setImmediate(false);
		loginLayout.setWidth("-1px");
		loginLayout.setHeight("-1px");
		loginLayout.setMargin(false);
		
		// tpassword
		tpassword = new PasswordField();
		tpassword.setCaption("Salasana");
		tpassword.setImmediate(false);
		tpassword.setWidth("-1px");
		tpassword.setHeight("-1px");
		loginLayout.addComponent(tpassword);
		
		// tnimik
		tnimik = new TextField();
		tnimik.setCaption("Nimi");
		tnimik.setImmediate(false);
		tnimik.setWidth("-1px");
		tnimik.setHeight("-1px");
		loginLayout.addComponent(tnimik);
		
		// blogin
		blogin = new Button();
		blogin.setCaption("Login");
		blogin.setImmediate(true);
		blogin.setWidth("-1px");
		blogin.setHeight("-1px");
		loginLayout.addComponent(blogin);
		loginLayout.setComponentAlignment(blogin, new Alignment(48));
		
		blogin.addClickListener(new Button.ClickListener() {
			public void buttonClick(ClickEvent tryLogin) {
				
				//User user = User.autheticate(tnimik.getValue(), tpassword.getValue());
		
				if(user == null){
					virhelaatikko;
				}
			}
		});
		return loginLayout;
	}
	
	private VerticalLayout virhelaatikko() {
		buildVirhelaatikko;
		setCompositionRoot(virhelaatikko);
	}
	//popup jos ka
		
		virhelaatikko.setMargin(true);
		setContent(virhelaatikko);
		virhelaatikko.addComponent(new Label("Kirjautumisessa oli virhe"));
		
//		Button button = new Button("Click Me");
//		button.addClickListener(new Button.ClickListener() {
//			public void buttonClick(ClickEvent event) {
//				layout.addComponent(new Label("Thank you for clicking"));
//			}
//		});
//		layout.addComponent(button);
        private final TextField textField = new TextField(
                "Minimized HTML content", "Click to edit");

        @Override
        public final Component getPopupComponent() {
            return textField;
        }

        @Override
        public final String getMinimizedValueAsHTML() {
            return textField.getValue();
        }
    };

}
